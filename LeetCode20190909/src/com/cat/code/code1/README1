问题描述：
给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/two-sum
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

解决思路：
我们假定数组其中两个数a+b=target
等式替换target-a = b
我们可以遍历找符合要求的另一个数位置是什么=====》java为我们提供了map，在1.8中HashMap中使用【数组+链表+红黑树】，插入扩容效率提高
我们使用这个数的数值作为map的key，value存储数组索引===》map.put(a,b);
但是“你不能重复利用这个数组中同样的元素”
    当数据中出现[3,2,4] 6 时 ，为了避免3被重复使用，我们必须排除掉已经使用过的3
    但当数据出现[3,3] 6 时，已知map的key唯一，3作为key只能被使用一次，所以我们的value必须可以存储多个坐标
    【解决】：
        我们在第一次遍历时将数组转入map中，存储：key--->num[i] , value--->i+","+j+....+","
        由于数组索引递增，所以value中 j > i 是必然
        我们在第二次遍历时，通过target-a = b 找到b的索引，但在寻找b的索引之前，我们先移除a的索引
        操作上我们只需要将 value=i+","+j+....+"," 变成 value = j+....+","
        然后若b作为key时查询到value1!=null 或者 不等于 ""(空字符串)，第一个","之前的数字即为匹配数字