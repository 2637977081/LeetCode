问题描述：
给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-two-numbers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

解决思路：
节点处理对我来说很麻烦，先将链表转化为子字符串，用字符串相加，然后将字符串转为链表

链表转字符串==》   public String getStringFromListNode(ListNode listNode)
字符串相加求和==》  public String getSumByString(String str1,String str2)
字符串转链表==》   public ListNode getListNodeFromString(String str)